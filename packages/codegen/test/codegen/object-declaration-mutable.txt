obj Animal {
  name: str
  mut age: int
}
obj Human {
  name: str
  mut pets: Animal[]
}
main {
  mut person1 := Human{name: "Peter"}
  mut person2 := Human{name: "Brian"}

  person1.pets.push(Animal{name: "Cleo", age: 1})
  person1.pets.push(Animal{name: "Bella", age: 1})

  person1.pets[0].age++

  person2.pets.push(Animal{name: "Luxor", age: 10})

  person3 := person1
  person1 = person2
  person2 = person3

  print(person1)
  print(person2)
  print(person3)
}
===== code =====
#include <d4/any.h>
#include <d4/array.h>
#include <d4/error.h>
#include <d4/globals.h>
#include <d4/macro.h>
#include <d4/number.h>
#include <d4/object.h>
#include <d4/safe.h>
#include <d4/string.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#define TYPE_obj_Human 1
D4_OBJECT_FORWARD_DECLARE(Animal)
D4_OBJECT_FORWARD_DECLARE(Human)
D4_OBJECT_DECLARE(Animal, {
  d4_str_t name;
  int32_t age;
}, const d4_str_t name, const int32_t age)
D4_ARRAY_DECLARE(obj_Animal, d4_obj_Animal_t)
D4_OBJECT_DECLARE(Human, {
  d4_str_t name;
  d4_arr_obj_Animal_t pets;
}, const d4_str_t name, const d4_arr_obj_Animal_t pets)
D4_ANY_DECLARE(obj_Human, d4_obj_Human_t)
D4_OBJECT_DEFINE(Animal, Animal, {
  self.name = d4_str_copy(name);
  self.age = age;
}, {
  result.name = d4_str_copy(self.name);
  result.age = self.age;
}, {
  return d4_str_eq(self.name, rhs.name) && self.age == rhs.age;
}, {
  d4_str_free(self.name);
}, {
  result = d4_obj_str_append(result, d4_str_alloc(L"name"), d4_str_quoted_escape(self.name));
  result = d4_obj_str_append(result, d4_str_alloc(L"age"), d4_int_str(self.age));
}, const d4_str_t name, const int32_t age)
D4_ARRAY_DEFINE(obj_Animal, d4_obj_Animal_t, d4_obj_Animal_t, d4_obj_Animal_copy(element), d4_obj_Animal_eq(lhs_element, rhs_element), d4_obj_Animal_free(element), d4_obj_Animal_str(element))
D4_OBJECT_DEFINE(Human, Human, {
  self.name = d4_str_copy(name);
  self.pets = d4_arr_obj_Animal_copy(pets);
}, {
  result.name = d4_str_copy(self.name);
  result.pets = d4_arr_obj_Animal_copy(self.pets);
}, {
  return d4_str_eq(self.name, rhs.name) && d4_arr_obj_Animal_eq(self.pets, rhs.pets);
}, {
  d4_str_free(self.name);
  d4_arr_obj_Animal_free(self.pets);
}, {
  result = d4_obj_str_append(result, d4_str_alloc(L"name"), d4_str_quoted_escape(self.name));
  result = d4_obj_str_append(result, d4_str_alloc(L"pets"), d4_arr_obj_Animal_str(self.pets));
}, const d4_str_t name, const d4_arr_obj_Animal_t pets)
D4_ANY_DEFINE(TYPE_obj_Human, obj_Human, d4_obj_Human_t, d4_obj_Human_copy(val), d4_obj_Human_eq(lhs_val, rhs_val), d4_obj_Human_free(val), d4_obj_Human_str(val))
int main (void) {
  d4_str_t __THE_1 = d4_str_empty_val;
  d4_str_t __THE_2 = d4_str_empty_val;
  d4_str_t __THE_3 = d4_str_empty_val;
  d4_obj_Animal_t __THE_4 = (d4_obj_Animal_t) {d4_str_empty_val, 0};
  d4_arr_obj_Animal_t __THE_5 = (d4_arr_obj_Animal_t) {NULL, 0};
  d4_str_t __THE_6 = d4_str_empty_val;
  d4_obj_Animal_t __THE_7 = (d4_obj_Animal_t) {d4_str_empty_val, 0};
  d4_arr_obj_Animal_t __THE_8 = (d4_arr_obj_Animal_t) {NULL, 0};
  d4_str_t __THE_9 = d4_str_empty_val;
  d4_obj_Animal_t __THE_10 = (d4_obj_Animal_t) {d4_str_empty_val, 0};
  d4_arr_obj_Animal_t __THE_11 = (d4_arr_obj_Animal_t) {NULL, 0};
  d4_obj_Human_t person3_0;
  d4_any_t __THE_12 = {-1, NULL, NULL, NULL, NULL, NULL};
  d4_arr_any_t __THE_13 = (d4_arr_any_t) {NULL, 0};
  void *__THE_14 = NULL;
  d4_any_t __THE_15 = {-1, NULL, NULL, NULL, NULL, NULL};
  d4_arr_any_t __THE_16 = (d4_arr_any_t) {NULL, 0};
  void *__THE_17 = NULL;
  d4_any_t __THE_18 = {-1, NULL, NULL, NULL, NULL, NULL};
  d4_arr_any_t __THE_19 = (d4_arr_any_t) {NULL, 0};
  void *__THE_20 = NULL;
  d4_obj_Human_t person1_0 = d4_obj_Human_alloc(__THE_1 = d4_str_alloc(L"Peter"), (d4_arr_obj_Animal_t) {NULL, 0});
  d4_obj_Human_t person2_0 = d4_obj_Human_alloc(__THE_2 = d4_str_alloc(L"Brian"), (d4_arr_obj_Animal_t) {NULL, 0});
  d4_arr_obj_Animal_push(&person1_0.pets, __THE_5 = d4_arr_obj_Animal_alloc(1, __THE_4 = d4_obj_Animal_alloc(__THE_3 = d4_str_alloc(L"Cleo"), 1)));
  d4_arr_obj_Animal_push(&person1_0.pets, __THE_8 = d4_arr_obj_Animal_alloc(1, __THE_7 = d4_obj_Animal_alloc(__THE_6 = d4_str_alloc(L"Bella"), 1)));
  (*d4_arr_obj_Animal_at(&d4_err_state, 16, 3, person1_0.pets, 0)).age++;
  d4_arr_obj_Animal_push(&person2_0.pets, __THE_11 = d4_arr_obj_Animal_alloc(1, __THE_10 = d4_obj_Animal_alloc(__THE_9 = d4_str_alloc(L"Luxor"), 10)));
  person3_0 = d4_obj_Human_copy(person1_0);
  person1_0 = d4_obj_Human_realloc(person1_0, person2_0);
  person2_0 = d4_obj_Human_realloc(person2_0, person3_0);
  d4_print.func(d4_print.ctx, __THE_14 = d4_safe_calloc(&(d4_fn_sFP4arr_anyFP1strFP1strFP1strFRvoidFE_params_t) {__THE_13 = d4_arr_any_alloc(1, __THE_12 = d4_any_obj_Human_alloc(person1_0)), 0, d4_str_empty_val, 0, d4_str_empty_val, 0, d4_str_empty_val}, sizeof(d4_fn_sFP4arr_anyFP1strFP1strFP1strFRvoidFE_params_t)));
  d4_print.func(d4_print.ctx, __THE_17 = d4_safe_calloc(&(d4_fn_sFP4arr_anyFP1strFP1strFP1strFRvoidFE_params_t) {__THE_16 = d4_arr_any_alloc(1, __THE_15 = d4_any_obj_Human_alloc(person2_0)), 0, d4_str_empty_val, 0, d4_str_empty_val, 0, d4_str_empty_val}, sizeof(d4_fn_sFP4arr_anyFP1strFP1strFP1strFRvoidFE_params_t)));
  d4_print.func(d4_print.ctx, __THE_20 = d4_safe_calloc(&(d4_fn_sFP4arr_anyFP1strFP1strFP1strFRvoidFE_params_t) {__THE_19 = d4_arr_any_alloc(1, __THE_18 = d4_any_obj_Human_alloc(person3_0)), 0, d4_str_empty_val, 0, d4_str_empty_val, 0, d4_str_empty_val}, sizeof(d4_fn_sFP4arr_anyFP1strFP1strFP1strFRvoidFE_params_t)));
  d4_safe_free(__THE_20);
  d4_arr_any_free(__THE_19);
  d4_any_free(__THE_18);
  d4_safe_free(__THE_17);
  d4_arr_any_free(__THE_16);
  d4_any_free(__THE_15);
  d4_safe_free(__THE_14);
  d4_arr_any_free(__THE_13);
  d4_any_free(__THE_12);
  d4_obj_Human_free(person3_0);
  d4_arr_obj_Animal_free(__THE_11);
  d4_obj_Animal_free(__THE_10);
  d4_str_free(__THE_9);
  d4_arr_obj_Animal_free(__THE_8);
  d4_obj_Animal_free(__THE_7);
  d4_str_free(__THE_6);
  d4_arr_obj_Animal_free(__THE_5);
  d4_obj_Animal_free(__THE_4);
  d4_str_free(__THE_3);
  d4_obj_Human_free(person2_0);
  d4_str_free(__THE_2);
  d4_obj_Human_free(person1_0);
  d4_str_free(__THE_1);
}
===== output =====
Human{name: "Brian", pets: [Animal{name: "Luxor", age: 10}]}
Human{name: "Peter", pets: [Animal{name: "Cleo", age: 2}, Animal{name: "Bella", age: 1}]}
Human{name: "Peter", pets: [Animal{name: "Cleo", age: 2}, Animal{name: "Bella", age: 1}]}
