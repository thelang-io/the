fn test1 (a: int, b := 1, c := 2) int {
  return a + b + c
}

main {
  test1(1)
  test1(1, 2)
  test1(1, 2, 3)
  test1(1, b: 2)
  test1(1, c: 3)
  test1(1, b: 2, c: 3)
  test1(1, c: 3, b: 2)

  mut a := 1

  fn test2 (a2: int, b := 1, c := 2) {
    a = a2 + b + c
  }

  test2(1)
  test2(1, 2)
  test2(1, 2, 3)
  test2(1, b: 2)
  test2(1, c: 3)
  test2(1, b: 2, c: 3)
  test2(1, c: 3, b: 2)
}
===== code =====
#include <d4/arc.h>
#include <d4/fn.h>
#include <d4/number.h>
#include <d4/safe.h>
#include <d4/string.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
D4_ARC_FORWARD_DECLARE(int)
D4_FUNCTION_DECLARE_WITH_PARAMS(s, int, int32_t, FP3intFP1intFP1int, {
  int32_t n0;
  unsigned char o1;
  int32_t n1;
  unsigned char o2;
  int32_t n2;
})
D4_FUNCTION_DECLARE_WITH_PARAMS(s, void, void, FP3intFP1intFP1int, {
  int32_t n0;
  unsigned char o1;
  int32_t n1;
  unsigned char o2;
  int32_t n2;
})
D4_ARC_DECLARE(int, int32_t)
D4_FUNCTION_DEFINE_WITH_PARAMS(s, int, int32_t, FP3intFP1intFP1int)
D4_FUNCTION_DEFINE_WITH_PARAMS(s, void, void, FP3intFP1intFP1int)
D4_ARC_DEFINE(int, int32_t, ref, lhs_ref == rhs_ref, (void) ref, d4_int_str(ref))
d4_fn_sFP3intFP1intFP1intFRintFE_t test1_0;
d4_fn_sFP3intFP1intFP1intFRvoidFE_t test2_0;
int32_t test1_0_func (void *ctx, d4_fn_sFP3intFP1intFP1intFRintFE_params_t *params) {
  int32_t a_0 = params->n0;
  int32_t b_0 = params->o1 == 1 ? params->n1 : 1;
  int32_t c_0 = params->o2 == 1 ? params->n2 : 2;
  return a_0 + b_0 + c_0;
}
typedef struct {
  d4_arc_int_t a;
} test2_0_ctx_t;
void *test2_0_ctx_copy (const test2_0_ctx_t *ctx) {
  test2_0_ctx_t *result = d4_safe_alloc(sizeof(test2_0_ctx_t));
  result->a = d4_arc_int_copy(ctx->a);
  return result;
}
void test2_0_ctx_free (test2_0_ctx_t *ctx) {
  d4_arc_int_free(ctx->a);
  d4_safe_free(ctx);
}
void test2_0_func (test2_0_ctx_t *ctx, d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t *params) {
  d4_arc_int_t a_0 = ctx->a;
  int32_t a2_0 = params->n0;
  int32_t b_0 = params->o1 == 1 ? params->n1 : 1;
  int32_t c_0 = params->o2 == 1 ? params->n2 : 2;
  d4_arc_int_realloc(a_0, a2_0 + b_0 + c_0);
}
int main (void) {
  void *__THE_1 = NULL;
  void *__THE_2 = NULL;
  void *__THE_3 = NULL;
  void *__THE_4 = NULL;
  void *__THE_5 = NULL;
  void *__THE_6 = NULL;
  void *__THE_7 = NULL;
  d4_arc_int_t a_0;
  void *__THE_8 = NULL;
  void *__THE_9 = NULL;
  void *__THE_10 = NULL;
  void *__THE_11 = NULL;
  void *__THE_12 = NULL;
  void *__THE_13 = NULL;
  void *__THE_14 = NULL;
  test1_0 = d4_fn_sFP3intFP1intFP1intFRintFE_alloc((d4_str_t) {L"test1", 5, true}, NULL, NULL, NULL, (int32_t (*) (void *, void *)) test1_0_func);
  test1_0.func(test1_0.ctx, __THE_1 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 0, 0, 0, 0}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  test1_0.func(test1_0.ctx, __THE_2 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 1, 2, 0, 0}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  test1_0.func(test1_0.ctx, __THE_3 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 1, 2, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  test1_0.func(test1_0.ctx, __THE_4 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 1, 2, 0, 0}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  test1_0.func(test1_0.ctx, __THE_5 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 0, 0, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  test1_0.func(test1_0.ctx, __THE_6 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 1, 2, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  test1_0.func(test1_0.ctx, __THE_7 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRintFE_params_t) {1, 1, 2, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRintFE_params_t)));
  a_0 = d4_arc_int_alloc(1);
  test2_0 = d4_fn_sFP3intFP1intFP1intFRvoidFE_alloc((d4_str_t) {L"test2", 5, true}, d4_safe_calloc(&(test2_0_ctx_t) {d4_arc_int_copy(a_0)}, sizeof(test2_0_ctx_t)), (void *(*) (const void *)) test2_0_ctx_copy, (void (*) (void *)) test2_0_ctx_free, (void (*) (void *, void *)) test2_0_func);
  test2_0.func(test2_0.ctx, __THE_8 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 0, 0, 0, 0}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  test2_0.func(test2_0.ctx, __THE_9 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 1, 2, 0, 0}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  test2_0.func(test2_0.ctx, __THE_10 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 1, 2, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  test2_0.func(test2_0.ctx, __THE_11 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 1, 2, 0, 0}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  test2_0.func(test2_0.ctx, __THE_12 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 0, 0, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  test2_0.func(test2_0.ctx, __THE_13 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 1, 2, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  test2_0.func(test2_0.ctx, __THE_14 = d4_safe_calloc(&(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t) {1, 1, 2, 1, 3}, sizeof(d4_fn_sFP3intFP1intFP1intFRvoidFE_params_t)));
  d4_safe_free(__THE_14);
  d4_safe_free(__THE_13);
  d4_safe_free(__THE_12);
  d4_safe_free(__THE_11);
  d4_safe_free(__THE_10);
  d4_safe_free(__THE_9);
  d4_safe_free(__THE_8);
  d4_fn_sFP3intFP1intFP1intFRvoidFE_free(test2_0);
  d4_arc_int_free(a_0);
  d4_safe_free(__THE_7);
  d4_safe_free(__THE_6);
  d4_safe_free(__THE_5);
  d4_safe_free(__THE_4);
  d4_safe_free(__THE_3);
  d4_safe_free(__THE_2);
  d4_safe_free(__THE_1);
  d4_fn_sFP3intFP1intFP1intFRintFE_free(test1_0);
}
===== output =====
