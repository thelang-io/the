main {
  mut a := 0
  loop {}
  loop i := 0;; {}
  loop ;; a++ {}
  loop a < 10 {}
  loop (a < 10) {}
  loop i := 0; i < 10; {}
  loop i := 0;; i++ {}

  loop (i := 0; i < 10; i++) {}

  loop i := 0; i < 10; i++ {
    b := i + a
    print(b)
  }
}
===== out =====
MainDeclaration()
  VariableDeclaration(name=a mutable=true constant=false context:var:name=a context:var:type=int context:var:mutable=true context:var:referenced=false)
    IntegerLiteral(initial=int value=0)
  LoopStatement(parenthesized=false)
  LoopStatement(parenthesized=false)
    VariableDeclaration(name=i mutable=false constant=false context:var:name=i context:var:type=int context:var:mutable=true context:var:referenced=false)
      IntegerLiteral(initial=int value=0)
  LoopStatement(parenthesized=false)
    UnaryExpression(initial=int operator=++ prefix=false)
      Identifier(initial=int name=a)
  LoopStatement(parenthesized=false)
    BinaryExpression(initial=bool operator=<)
      Identifier(initial=int name=a)
      IntegerLiteral(initial=int value=10)
  LoopStatement(parenthesized=true)
    BinaryExpression(initial=bool operator=<)
      Identifier(initial=int name=a)
      IntegerLiteral(initial=int value=10)
  LoopStatement(parenthesized=false)
    VariableDeclaration(name=i mutable=false constant=false context:var:name=i context:var:type=int context:var:mutable=true context:var:referenced=false)
      IntegerLiteral(initial=int value=0)
    BinaryExpression(initial=bool operator=<)
      Identifier(initial=int name=i)
      IntegerLiteral(initial=int value=10)
  LoopStatement(parenthesized=false)
    VariableDeclaration(name=i mutable=false constant=false context:var:name=i context:var:type=int context:var:mutable=true context:var:referenced=false)
      IntegerLiteral(initial=int value=0)
    UnaryExpression(initial=int operator=++ prefix=false)
      Identifier(initial=int name=i)
  LoopStatement(parenthesized=true)
    VariableDeclaration(name=i mutable=false constant=false context:var:name=i context:var:type=int context:var:mutable=true context:var:referenced=false)
      IntegerLiteral(initial=int value=0)
    BinaryExpression(initial=bool operator=<)
      Identifier(initial=int name=i)
      IntegerLiteral(initial=int value=10)
    UnaryExpression(initial=int operator=++ prefix=false)
      Identifier(initial=int name=i)
  LoopStatement(parenthesized=false)
    VariableDeclaration(name=i mutable=false constant=false context:var:name=i context:var:type=int context:var:mutable=true context:var:referenced=false)
      IntegerLiteral(initial=int value=0)
    BinaryExpression(initial=bool operator=<)
      Identifier(initial=int name=i)
      IntegerLiteral(initial=int value=10)
    UnaryExpression(initial=int operator=++ prefix=false)
      Identifier(initial=int name=i)
    VariableDeclaration(name=b mutable=false constant=false context:var:name=b context:var:type=int context:var:mutable=false context:var:referenced=false)
      BinaryExpression(initial=int operator=+)
        Identifier(initial=int name=i)
        Identifier(initial=int name=a)
    CallExpression(initial=void extra:asynchronous=false extra:returnType=void)
      Identifier(initial=(items: any..., separator: str, terminator: str, to: str) -> void name=print)
      CallExpressionArgument(extra:parameterIdx=0)
        Identifier(initial=int target=any name=b)
